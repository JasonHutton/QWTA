
#include <guis/game/vehicles/gdf/cockpits.include>

gui guis/vehicles/edf_husky {
	properties {
		float flags = immediate( flags ) | GUI_FULLSCREEN;
	}
	materials {
		"icon"		"guis/assets/hud/gdf/vehicles/husky"
	}
	_class_icons
	_base_icon
	_hud_materials
	_position( 0, 1.5, 10 )
}

gui guis/models/vehicles/husky/speed {

	properties {
		//string postProcessMaterial = "system/noglare";		
		float flags = immediate( flags ) & ~GUI_SCREENSAVER;
	}
	
	windowDef desktop {
		properties {
			color backColor = 0, 0, 0, 1;
		}	
	}
	windowDef vehicleSpeed {
		properties {
			rect rect = 284, 65, 200, 100;
			wstring text = toWString( player.speed, 0 );
			float fontSize = 96;
			float 	flags	= immediate( flags ) | WF_DROPSHADOW;
		}
	}
	windowDef vehicleSpeedUnits {
		properties {
			rect rect = ( gui.vehicleSpeed.rect.x + gui.vehicleSpeed.rect.w ), ( gui.vehicleSpeed.rect.y + gui.vehicleSpeed.rect.h ) - 37, 40, 0;
			handle	localizedText = localize( "guis/vehicles/mph" ); // "MPH";
			float fontSize = 20;
			color foreColor = 1,1,1,0.75;
			vec2 textAlignment = 2, 2;
		}
	}
	windowDef vehicleSpeedUnitsAlt {
		properties {
			rect rect = ( gui.vehicleSpeed.rect.x + gui.vehicleSpeed.rect.w ), ( gui.vehicleSpeed.rect.y + gui.vehicleSpeed.rect.h ) - 20, 40, 0;
			handle	localizedText = localize( "guis/vehicles/kph" ); // "KPH";
			float fontSize = 20;
			color foreColor = 1,1,1,0.2;
			vec2 textAlignment = 2, 2;
		}
	}
}


gui guis/models/vehicles/husky/cockpit {

	materials {
		"guis/assets/vehicles/display/health" "guis/assets/vehicles/display/health"
		"guis/assets/vehicles/display/speed"	"guis/assets/vehicles/display/speed"
		"guis/assets/vehicles/display/warning"	"guis/assets/vehicles/display/warning"
		
		"bg"		"guis/assets/vehicles/husky/background"
		"guis/assets/badger/tach"	"guis/assets/badger/tach"

		
		"textures/sfx/scanlines"			"textures/sfx/scanlines"
		"guis/assets/common/bglow"			"guis/assets/common/bglow"
		"guis/assets/common/addhighlight"		"guis/assets/common/addhighlight"
		"guis/assets/ethud/strogg/nesw"		"guis/assets/ethud/strogg/add_nesw"
		"guis/assets/ethud/strogg/add_mapticks"		"guis/assets/ethud/strogg/add_mapticks"
		"guis/assets/badger/radial"		"guis/assets/badger/radial"
		"guis/assets/badger/radial2"		"guis/assets/badger/radial2"
		"guis/assets/badger/tach_add"		"guis/assets/badger/tach_add"
		
	}
	properties {
		//string postProcessMaterial = "system/noglare";		
		float flags = immediate( flags ) & ~GUI_SCREENSAVER;
	}
	
	windowDef desktop {
		properties {
			color backColor = 0, 0, 0, 0;	
		}
	}
	windowDef BackgroundImage {
		properties {
			color backColor = 1,1,1,0.92;
			string material = "bg";
			rect	rect		= 0, 0, 640, 480;
		}
	}	


	windowDef vehicleHealthBG {
		properties {
			color backColor = 0,0.67,1,1;
			string material = "guis/assets/badger/tach_add";
			rect	rect		= 270, 184, 170, 44;
		}
		timeLine {
			onTime 0 {
				if( player.vehicleHealth < 0.3 ) {
					backColor = transition( backColor, "1, 0, 0, 1", 250 );
				} else {
					backcolor = 0,0.67,1,1;
				}
			}
			onTime 250 {
				if( player.vehicleHealth < 0.3 ) {
					backColor = transition( backColor, "0.1, 0, 0, 1", 250 );
				} else {
					backcolor = 0,0.67,1,1;
				}
			}
			onTime 500 {
				timeline.default.resetTime( 0 );
			}
		}
	}
	windowDef vehicleHealthClip {
		properties {
			rect	rect		= gui.vehicleHealthBG.rect.x, gui.vehicleHealthBG.rect.y, (player.vehicleHealth * 170), 44;
			float flags = WF_CLIP_TO_RECT;
		}
		windowDef vehicleHealth {
			properties {
				color backColor = 1,1,1,0.6;
				string material = "guis/assets/badger/tach_add";
				rect	rect		= 0, 0, 170, 44;//0, 0, 600, 50;
			}
		}
	}
	windowDef Icon1 {
		properties {
			rect	rect = 230, 195, 40, 34;
			string material = "guis/assets/vehicles/display/health" ;
			color backColor = 0.73,1,1,1;
		}
	}

	windowDef Icon2 {
		properties {
			rect	rect = 234, 242, 36, 32;
			string material = "guis/assets/vehicles/display/speed" ;
			color backColor = 0.73,1,1,1;
		}
	}


	windowDef Icon4 {
		properties {
			rect	rect = 192, 180, 40, 46;
			string material = "guis/assets/vehicles/display/warning" ;
			color backColor = 0.16,0.3,0.3,1;
		}
		timeLine {
			onTime 0 {
				if( player.vehicleHealth < 0.3 ) {
					backColor = transition( backColor, "1, 0, 0, 1", 250 );
				} else {
					backcolor = 0.16,0.3,0.3,1;
				}
			}
			onTime 250 {
				if( player.vehicleHealth < 0.3 ) {
					backColor = transition( backColor, "0.1, 0, 0, 1", 250 );
				} else {
					backcolor = 0.16,0.3,0.3,1;
				}
			}
			onTime 500 {
				timeline.default.resetTime( 0 );
			}
		}
	}

	windowDef vehicleRadialFade {
		properties {
			color backColor = 0.1,0.1,0.1,1;
			string material = "guis/assets/badger/radial";
			rect	rect		= 312,300,120,120;
		}
	}

	windowDef vehicleRadial {
		properties {
			color backColor = 1,1,1,1;
			rect	rect		= 312,gui.vehicleRadialFade.rect.y,120,120;
		}
		_speed_arc( "guis/assets/badger/radial", "player.speed / 160" )
	}
	windowDef vehicleRadialBGClip {
		properties {
			rect	rect		= gui.vehicleRadial.rect.x,gui.vehicleRadial.rect.y+60,120,60;//gui.vehicleSpeed.rect.x-4, gui.vehicleSpeed.rect.y+88, 312, 33;
			float flags = WF_CLIP_TO_RECT;
		}
		windowDef vehicleRadialBG {
			properties {
				color backColor = (player.speed * 0.1),(player.speed * 0.1),(player.speed * 0.1),0.2;
				string material = "guis/assets/badger/radial";
				rect	rect		= 0,-60,120,120;//gui.vehicleSpeed.rect.x-4, gui.vehicleSpeed.rect.y+88, 312, 33;
			}
		}
	}
	windowDef vehicleRadial1Fade {
		properties {
			color backColor = 0.1,0.1,0.1,1;
			string material = "guis/assets/badger/radial";
			rect	rect		= gui.vehicleRadial.rect.x+28,gui.vehicleRadial.rect.y+30,65,65;//gui.vehicleSpeed.rect.x-4, gui.vehicleSpeed.rect.y+88, 312, 33;
		}
	}	
	windowDef vehicleRadial1 {
		properties {
			color backColor = (player.speed * 0.04),(player.speed * 0.04),(player.speed * 0.04),0.2;
			rect	rect		= gui.vehicleRadial1Fade.rect.x,gui.vehicleRadial1Fade.rect.y,65,65;
		}
		_speed_arc( "guis/assets/badger/radial", "player.speed / 60" )
	}
	windowDef vehicleRadial2 {
		properties {
			color backColor = 0.9,0.9,0.95,0.2;
			string material = "guis/assets/badger/radial2";
			rect	rect		= gui.vehicleRadial1Fade.rect.x,gui.vehicleRadial1Fade.rect.y,65,65;
			float	visible	= globals.vehicles.overDriveFraction != 0.5;
		}
	}
	windowDef vehicleSpeedBack {
		properties {
			rect rect = 200, 230, 199, 100;
			wstring text = toWStr( "000" );
			float fontSize = 68;
			string font = "digital";
			vec2 	textAlignment = 2, 1;
			color   foreColor = 0.25, 0.25, 0.25, 1.0;
		}
		windowDef vehicleSpeed {
			properties {
				rect rect = 0, 0, 199, 100;
				wstring text = toWString( player.speed, 0 );
				float fontSize = 68;
				string font = "digital";
				vec2 	textAlignment = 2, 1;
			}
		}
	}
/*	windowDef vehicleSpeed {
		properties {
			rect rect = 220, 200, 199, 100;
			wstring text = toWString( player.speed, 0 );
			float fontSize = 72;
			float 	flags	= immediate( flags ) | WF_DROPSHADOW;
			vec2 	textAlignment = 2, 1;
			color forecolor = 1,1,1,1;
		}
	}*/

	windowDef vehicleSpeedUnits {
		properties {
			rect rect = _to_right_of( vehicleSpeedBack )-155, _to_bottom_of( vehicleSpeedBack )-40, 198, 0;
			handle	localizedText = localize( "guis/vehicles/mph" ); // "MPH";
			float fontSize = 28;
			color foreColor = 1,1,1,1;
			vec2 textAlignment = 2, 2;
		}
	}	
	windowDef Compass2 {
		properties {
			rect	rect = 200, 300, 110, 120;
			string	material = "guis/assets/ethud/strogg/nesw";
			color	backColor = 1, 1, 1, 1;
			float	rotation = ( player.yaw ) +270;
		}
	}
	windowDef Compass2a {
		properties {
			rect	rect = gui.Compass2.rect.x+22, gui.Compass2.rect.y+25, 66, 70;
			string	material = "guis/assets/ethud/strogg/nesw";
			color	backColor = 0.25, 0.25, 0.25, 1;
			float	rotation = ( player.yaw ) +270;
		}
	}	
}
